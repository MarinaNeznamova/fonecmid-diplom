
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.Организация КАК Организация,
	               |	ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	ЗаказПокупателя.Договор КАК Договор,
	               |	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
	               |	ЗаказПокупателя.Товары.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Товары,
	               |	ЗаказПокупателя.Услуги.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Услуги
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	ТоварыОснования = Выборка.Товары.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
	КонецЦикла;
	
	УслугиОснования = Выборка.Услуги.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	КонецЦикла;
	
	Основание = ДанныеЗаполнения;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	НоменклатураРаботыСпециалиста = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();
	Движения.ОбработкаЗаказов.Записывать = Истина;
	Движения.ОстаткиТоваров.Записывать = Истина;
	
	Движение = Движения.ОбработкаЗаказов.Добавить();
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договор;
	Движение.Заказ = Основание;
	Движение.СуммаОтгрузки = СуммаДокумента;
	
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;
//++Незнамова МН:Добавление Команды Заполнить   
	
	// регистр ВКМ_ВыполненныеКлиентуРаботы Расход   
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	
	Для Каждого ТекСтрокаУслуги Из Услуги Цикл 
		Если ТекСтрокаУслуги.Номенклатура = НоменклатураРаботыСпециалиста Тогда
			Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = Дата;
			Движение.Клиент = Контрагент;
			Движение.Договор = Договор;
			Движение.КоличествоЧасов = ТекСтрокаУслуги.Количество;
			Движение.СуммаКОплате = ТекСтрокаУслуги.Сумма;  
		КонецЕсли;
	КонецЦикла
//--Незнамова МН:Добавление Команды Заполнить   
	
КонецПроцедуры

//++Незнамова МН:Добавление Команды Заполнить   
Процедура ВыполнитьАвтозаполнение() Экспорт 	  
	АбонентскаяПлата = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить();	
	РаботаСпециалита = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();  
	
	Если Не ЗначениеЗаполнено(АбонентскаяПлата)  Тогда
		ОбщегоНазначения.СообщитьПользователю("Заполните константу ""Номенклатура абонентская плата""");
		Возврат;
	КонецЕсли;	
	Если Не ЗначениеЗаполнено(РаботаСпециалита) Тогда
		ОбщегоНазначения.СообщитьПользователю("Заполните константу ""Номенклатура работа специалиста""");
		Возврат;
	КонецЕсли;	  
	
	Услуги.Очистить();
	Товары.Очистить();
	
	АбонентскаяПлатаИзДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор,"ВКМ_СуммаАбонентскойПлаты");
	Если АбонентскаяПлатаИзДоговора>0  Тогда
		НоваяУслуга = Услуги.Добавить();
		НоваяУслуга.Номенклатура = АбонентскаяПлата;
		НоваяУслуга.Количество = 1;
		НоваяУслуга.Сумма = АбонентскаяПлатаИзДоговора;
		НоваяУслуга.Цена = АбонентскаяПлатаИзДоговора;
	КонецЕсли;
	
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(ВКМ_ВыполненныеКлиентуРаботыОбороты.КоличествоЧасовОборот) КАК КоличествоЧасовОборот,
		|	СУММА(ВКМ_ВыполненныеКлиентуРаботыОбороты.СуммаКОплатеОборот) КАК СуммаКОплатеОборот,
		|	ВКМ_ВыполненныеКлиентуРаботыОбороты.Договор КАК Договор,
		|	ВКМ_ВыполненныеКлиентуРаботыОбороты.КоличествоЧасовПриход КАК КоличествоЧасовПриход,
		|	ВКМ_ВыполненныеКлиентуРаботыОбороты.КоличествоЧасовРасход КАК КоличествоЧасовРасход,
		|	ВКМ_ВыполненныеКлиентуРаботыОбороты.СуммаКОплатеПриход КАК СуммаКОплатеПриход,
		|	ВКМ_ВыполненныеКлиентуРаботыОбороты.СуммаКОплатеРасход КАК СуммаКОплатеРасход
		|ИЗ
		|	РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Месяц,
		|			Договор = &Договор
		|				И Клиент = &Клиент) КАК ВКМ_ВыполненныеКлиентуРаботыОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ВыполненныеКлиентуРаботыОбороты.Договор,
		|	ВКМ_ВыполненныеКлиентуРаботыОбороты.КоличествоЧасовПриход,
		|	ВКМ_ВыполненныеКлиентуРаботыОбороты.КоличествоЧасовРасход,
		|	ВКМ_ВыполненныеКлиентуРаботыОбороты.СуммаКОплатеПриход,
		|	ВКМ_ВыполненныеКлиентуРаботыОбороты.СуммаКОплатеРасход";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Договор", Договор);
	Запрос.УстановитьПараметр("Клиент", Контрагент);

	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ЦенаРаботИзДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор,"ВКМ_СтоимостьЧасаРаботы");
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		УслугиСпециалиста = Услуги.Добавить();
		УслугиСпециалиста.Номенклатура = РаботаСпециалита;
		УслугиСпециалиста.Количество = ВыборкаДетальныеЗаписи.КоличествоЧасовРасход;
		УслугиСпециалиста.Сумма = ВыборкаДетальныеЗаписи.СуммаКОплатеРасход;
		УслугиСпециалиста.Цена = ЦенаРаботИзДоговора;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
 СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");	
КонецПроцедуры	
//--Незнамова МН:Добавление Команды Заполнить 


#КонецОбласти

#КонецЕсли
