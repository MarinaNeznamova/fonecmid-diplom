
Процедура ОбработкаПроведения(Отказ, Режим)
	СформироватьДвижения();     
	
	РассчитатьНачисление();   
	РассчитатьПремииПроцентом();

	РассчитатьОтпуск();
	РассчитатьУдержания();
	ФормированиеДвиженияВзаиморасчетовССотрудниками();
КонецПроцедуры

Процедура СформироватьДвижения()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НачислениеЗарплатыНачисления.Сотрудник КАК Сотрудник,
	|	НачислениеЗарплатыНачисления.ВидРасчета КАК ВидРасчета,
	|	НачислениеЗарплатыНачисления.ДатаНачала КАК ДатаНачала,
	|	НачислениеЗарплатыНачисления.ДатаОкончания КАК ДатаОкончания,
	|	НачислениеЗарплатыНачисления.ГрафикРаботы КАК ГрафикРаботы
	|ИЗ
	|	Документ.ВКМ_НачисленияЗарплаты.Начисления КАК НачислениеЗарплатыНачисления
	|ГДЕ
	|	НачислениеЗарплатыНачисления.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск Тогда
			Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
			Движение.ПериодРегистрации = Дата;
			Движение.ПериодДействияНачало = Выборка.ДатаНачала;
			Движение.ПериодДействияКонец = Выборка.ДатаОкончания;
			Движение.БазовыйПериодНачало = НачалоМесяца(ДобавитьМесяц(Выборка.ДатаНачала, -12));
			Движение.БазовыйПериодКонец = КонецМесяца(ДобавитьМесяц(Выборка.ДатаНачала, -1));
			Движение.ВидРасчета = Выборка.ВидРасчета;
			Движение.Сотрудник = Выборка.Сотрудник;
			Движение.ГрафикРаботы = Выборка.ГрафикРаботы;   
		КонецЕсли;
		
		Если Выборка.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Начисление Тогда
			Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
			Движение.ПериодРегистрации = Дата;
			Движение.ПериодДействияНачало = Выборка.ДатаНачала;
			Движение.ПериодДействияКонец = Выборка.ДатаОкончания;
			Движение.ВидРасчета = Выборка.ВидРасчета;
			Движение.Сотрудник = Выборка.Сотрудник;
			Движение.ГрафикРаботы = Выборка.ГрафикРаботы;  
		КонецЕсли;
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать();
	
КонецПроцедуры


Процедура РассчитатьНачисление()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия, 0) КАК План,
	|	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад, 0) КАК Оклад,
	|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК Факт
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(
	|			Регистратор = &Ссылка
	|				И ВидРасчета = &Начисление) КАК ОсновныеНачисленияДанныеГрафика
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(
	|				&Дата,
	|				Сотрудник В
	|					(ВЫБРАТЬ
	|						ВКМ_НачисленияЗарплатыНачисления.Сотрудник КАК Сотрудник
	|					ИЗ
	|						Документ.ВКМ_НачисленияЗарплаты.Начисления КАК ВКМ_НачисленияЗарплатыНачисления
	|					ГДЕ
	|						ВКМ_НачисленияЗарплатыНачисления.Ссылка = &Ссылка)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
	|		ПО ОсновныеНачисленияДанныеГрафика.Сотрудник = ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Начисление", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Начисление);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		Движение.Результат = ?(Выборка.План=0,0,Выборка.Оклад*Выборка.Факт/Выборка.План);
		Движение.Оклад = Выборка.Оклад;
		Движение.ОтработаноЧасов = Выборка.Факт;
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	
КонецПроцедуры


Процедура РассчитатьПремииПроцентом()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВКМ_НачисленияЗарплатыНачисления.Сотрудник КАК Сотрудник,
	|	ВКМ_НачисленияЗарплатыНачисления.ГрафикРаботы КАК ГрафикРаботы
	|ПОМЕСТИТЬ ВТ_Начисления
	|ИЗ
	|	Документ.ВКМ_НачисленияЗарплаты.Начисления КАК ВКМ_НачисленияЗарплатыНачисления
	|ГДЕ
	|	ВКМ_НачисленияЗарплатыНачисления.Ссылка = &Ссылка
	|	И ВКМ_НачисленияЗарплатыНачисления.ВидРасчета = &Начисление
	|
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_НачисленияЗарплатыНачисления.Сотрудник,
	|	ВКМ_НачисленияЗарплатыНачисления.ГрафикРаботы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВКМ_ВыполненныеСотрудникомРаботыОбороты.СуммаКОплатеОборот, 0) КАК ПроцентЗаРаботу,
	|	ВТ_Начисления.Сотрудник КАК Сотрудник,
	|	ЕСТЬNULL(ВКМ_ВыполненныеСотрудникомРаботыОбороты.ЧасовКОплатеОборот, 0) КАК ЧасовКОплатеОборот,
	|	ВТ_Начисления.ГрафикРаботы КАК ГрафикРаботы
	|ИЗ
	|	ВТ_Начисления КАК ВТ_Начисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты(
	|				&НачалоПериода,
	|				&КонецПериода,
	|				Месяц,
	|				Сотрудник В
	|					(ВЫБРАТЬ
	|						ВТ_Начисления.Сотрудник КАК Сотрудник
	|					ИЗ
	|						ВТ_Начисления КАК ВТ_Начисления)) КАК ВКМ_ВыполненныеСотрудникомРаботыОбороты
	|		ПО ВТ_Начисления.Сотрудник = ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Начисление", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Начисление);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить(); 
		Движение.ПериодРегистрации = Дата; 
	    Движение.ПериодДействияНачало = НачалоМесяца(Дата);
		Движение.ПериодДействияКонец = КонецМесяца(Дата);
		Движение.ГрафикРаботы = Выборка.ГрафикРаботы;  

		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.ПремияПроцентом;
		Движение.Сотрудник = Выборка.Сотрудник;  
		Движение.Результат = Выборка.ПроцентЗаРаботу;
		Движение.ОтработаноЧасов = Выборка.ЧасовКОплатеОборот;
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать();
	
КонецПроцедуры

Процедура РассчитатьОтпуск()
	// регистр ВКМ_ГрафикОтпусков Расход
	Движения.ВКМ_ГрафикОтпусков.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ОсновныеНачисленияБазаОсновныеНачисления.РезультатБаза, 0) КАК РезультатБаза,
	|	ЕСТЬNULL(ОсновныеНачисленияБазаОсновныеНачисления.ОтработаноЧасовБаза, 0) КАК ОтработаноЧасовБаза,
	|	ВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК ЧасыОтпуска,
	|	(РАЗНОСТЬДАТ(ВКМ_ОсновныеНачисленияДанныеГрафика.ПериодДействияНачало, ВКМ_ОсновныеНачисленияДанныеГрафика.ПериодДействияКонец, ДЕНЬ) + 1) * 8 КАК ЧасыОтпускаКалендарные,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.РезультатБаза, 0) КАК РезультатБазаДоп,
	|	ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
	|	ОсновныеНачисленияБазаОсновныеНачисления.БазовыйПериодНачало КАК БазовыйПериодНачало,
	|	ОсновныеНачисленияБазаОсновныеНачисления.БазовыйПериодКонец КАК БазовыйПериодКонец,
	|	ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.БазовыйПериодНачало КАК БазовыйПериодНачало1,
	|	ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.БазовыйПериодКонец КАК БазовыйПериодКонец1
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(
	|				&Измерения,
	|				&Измерения,
	|				,
	|				Регистратор = &Ссылка
	|					И ВидРасчета = &Отпуск) КАК ОсновныеНачисленияБазаОсновныеНачисления
	|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ОсновныеНачисленияБазаОсновныеНачисления.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ДополнительныеНачисления(
	|				&Измерения,
	|				&Измерения,
	|				,
	|				ВидРасчета = &Отпуск
	|					И Регистратор = &Ссылка) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления
	|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(
	|				ВидРасчета = &Отпуск
	|					И Регистратор = &Ссылка) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
	|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки
	|ГДЕ
	|	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
	|	И ВКМ_ОсновныеНачисления.ВидРасчета = &Отпуск";
	
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Отпуск", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	Запрос.УстановитьПараметр("Измерения", Измерения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ДвижениеОсновныеНачисления = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		
		Если Выборка.ОтработаноЧасовБаза = 0 Тогда
			ДвижениеОсновныеНачисления.Результат = 0;
		Иначе
			ДвижениеОсновныеНачисления.Результат = (Выборка.РезультатБаза+Выборка.РезультатБазаДоп) * Выборка.ЧасыОтпускаКалендарные / Выборка.ОтработаноЧасовБаза;
		КонецЕсли;
		
		
	
		Движение = Движения.ВКМ_ГрафикОтпусков.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Год = Год(Дата);
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.Дни = Выборка.ЧасыОтпускаКалендарные/8;

		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	
КонецПроцедуры

Процедура РассчитатьУдержания()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
	|	ВКМ_ОсновныеНачисления.Результат КАК Результат
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	|ГДЕ
	|	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_Удержания.Добавить();
		Движение.ПериодРегистрации = Дата;
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
		Движение.Сотрудник = Выборка.Сотрудник;  
		Движение.Результат = Выборка.Результат * 0.13;
		Движение.Показатель = Выборка.Результат; 
		
	КонецЦикла;
	
	Движения.ВКМ_Удержания.Записать();
	
	
	
КонецПроцедуры

Процедура ФормированиеДвиженияВзаиморасчетовССотрудниками()
   	// регистр ВКМ_ВзаиморасчетыССотрудниками Приход
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ВКМ_ОсновныеНачисления.Результат КАК Результат,
		|	ВКМ_ОсновныеНачисления.ВидРасчета КАК ВидРасчета
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|ГДЕ
		|	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВКМ_Удержания.Сотрудник,
		|	ВКМ_Удержания.Результат,
		|	ВКМ_Удержания.ВидРасчета
		|ИЗ
		|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
		|ГДЕ
		|	ВКМ_Удержания.Регистратор = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
 			Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = Дата;
			Движение.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;

		Если ТипЗнч(ВыборкаДетальныеЗаписи.ВидРасчета) <> Тип("ПланВидовРасчетаСсылка.ВКМ_Удержания") Тогда
			Движение.Сумма = ВыборкаДетальныеЗаписи.Результат;
        Иначе
			Движение.Сумма = -1*ВыборкаДетальныеЗаписи.Результат;
		КонецЕсли;	
		
	КонецЦикла;
	
КонецПроцедуры
