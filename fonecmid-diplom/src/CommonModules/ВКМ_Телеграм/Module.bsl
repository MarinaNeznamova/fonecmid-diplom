#Область ПрограммныйИнтерфейс 
/////////////////////////////////////////////////////////////////////////////
// Процедура для передачи по защищенному соединению сервером api.telegram.org
// передает строку JSON, содержащую сообщение для специалиста.
// При получении ответа 200 справочник ВКМ_УведомленияТелеграмБоту очищается,
// иначе в журнале событий фиксируется ошибка. 
/////////////////////////////////////////////////////////////////////////////	

Процедура ВКМ_ТГУведомление() Экспорт
	
	HTTPСоединение = Новый HTTPСоединение("api.telegram.org", 443,,,,, Новый ЗащищенноеСоединениеOpenSSL);
	
	ДанныеДляЗапроса = "/bot" + Константы.ВКМ_ТокенУправленияТелеграмБотом.Получить() + "/sendMessage";
	
	HTTPЗапрос = Новый HTTPЗапрос(ДанныеДляЗапроса);
	
	HTTPЗапрос.Заголовки.Вставить("Content-Type", "application/json");
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!! 
	
	ГруппаИД = Константы.ВКМ_ИдентификаторГруппыДляОповещения.Получить(); 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_УведомленияТелеграмБоту.ТекстСообщения КАК ТекстСообщения,
		|	ВКМ_УведомленияТелеграмБоту.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ВКМ_УведомленияТелеграмБоту КАК ВКМ_УведомленияТелеграмБоту";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Сообщение = Новый Структура;
		Сообщение.Вставить("chat_id", ГруппаИД);
		Сообщение.Вставить("text", ВыборкаДетальныеЗаписи.ТекстСообщения);
		СтрокаJSON = СтрокаJSON(Сообщение);
		HTTPЗапрос.УстановитьТелоИзСтроки(СтрокаJSON);
		HTTPОтвет = HTTPСоединение.Получить(HTTPЗапрос);
		Если HTTPОтвет.КодСостояния = 200 Тогда
			Уведомление = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			Уведомление.Удалить();
		Иначе
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ЗаписьЖурналаРегистрации("HTTPСервисы.Ошибка", УровеньЖурналаРегистрации.Ошибка,,,ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке));
		КонецЕсли;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
КонецПроцедуры
#КонецОбласти   


#Область СлужебныеПроцедурыИФункции

Функция СтрокаJSON(Строка)
	 ПараметрыЗаписи = Новый ПараметрыЗаписиJSON(, Символы.Таб);
	 Запись = Новый ЗаписьJSON;
	 Запись.УстановитьСтроку(ПараметрыЗаписи);
	 ЗаписатьJSON(Запись, Строка);
	 
	 Возврат Запись.Закрыть();
	
КонецФункции	

#КонецОбласти 
